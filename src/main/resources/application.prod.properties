# root log level
logging.level.root=DEBUG

# MySQL ??
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.defer-datasource-initialization=true
#spring.sql.init.mode=always
#spring.sql.init.data-locations=classpath:/data.sql
#spring.sql.init.schema-locations=classpath:/schema.sql

#RDS DB Source URL
spring.datasource.url=${RDS_HOST}
spring.datasource.username=${RDS_USERNAME}
spring.datasource.password=${RDS_PASSWORD}

#batch size
spring.jpa.properties.hibernate.default_batch_fetch_size=1000

#local  DB username
#spring.datasource.url=jdbc:mysql://localhost:3306/projectMatch?createDatabaseIfNotExist=true&useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
#spring.datasource.username=root
#spring.datasource.password=password

# true ??? JPA ??? ?? ??
spring.jpa.show-sql=true

# DDL(create, alter, drop) ??? DB? ?? ??? ??? ? ??.
spring.jpa.hibernate.ddl-auto=create

# JPA? ???? Hibernate? ????? ??? SQL? ???? ????.
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# sql ????? ??
logging.level.org.hibernate.type.descriptor.sql=trace

# Local Redis
#spring.redis.host=localhost
#spring.redis.port=6379

# Elasti Cache Redis
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}

# jwt
jwt.secret=${JWT_SECRET_KEY}
# 30m
jwt.access.token.expiration.millis=1800000
# 7d
jwt.refresh.token.expiration.millis=604800000

# jwt_test (1m, 2m)
#jwt.access.token.expiration.millis=6000
#jwt.refresh.token.expiration.millis=12000

# AWS S3
cloud.aws.s3.bucket=${S3_BUCKET_NAME}
cloud.aws.region.static=ap-northeast-2
cloud.aws.regoin.auto=false
cloud.aws.stack.auto=false
cloud.aws.credentials.access-key=${S3_BUCKET_ACCESS}
cloud.aws.credentials.secret-key=${S3_BUCKET_SECRET}

# ?? ?? ??
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# Spring Security OAuth2 kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-info-authentication-method=header
spring.security.oauth2.client.provider.kakao.user-name-attribute=id